{
    "name": "meme-tools",
    "version": "1.0.0",
    "description": "Meme Tools",
    "scripts": {
        "prepare": "husky && yarn setenv:dev",
        "setenv:dev": "yarn config set initFields --home --json '{\"meme-tools\": {\"env\": \"development\"}}'",
        "setenv:test": "yarn config set initFields --home --json '{\"meme-tools\": {\"env\": \"test\"}}'",
        "setenv:prod": "yarn config set initFields --home --json '{\"meme-tools\": {\"env\": \"production\"}}'",
        "getenv": "yarn config get 'initFields[\"meme-tools\"].env'",
        "format": "prettier --check .",
        "format:fix": "prettier --write .",
        "lint": "eslint .",
        "lint:fix": "eslint --fix .",
        "test:raydium": "yarn setenv:test && yarn start:raydium && yarn add-liquidity:raydium && yarn trade:raydium && yarn finish:raydium && yarn setenv:dev",
        "start:raydium": "yarn get-config && yarn cleanup && yarn distribute-funds && yarn create-mint && yarn open-pool:raydium && yarn get-pool:raydium && yarn get-funds:main",
        "finish:raydium": "yarn close-pool:raydium && yarn collect-funds && yarn remove-liquidity:raydium && yarn get-funds",
        "cleanup": "NODE_ENV=$(yarn getenv) ts-node -r ./src/init.ts src/tasks/cleanup.ts",
        "distribute-funds": "NODE_ENV=$(yarn getenv) ts-node -r ./src/init.ts src/tasks/distribute-funds.ts",
        "replay-distribute-funds": "NODE_ENV=$(yarn getenv) LOGGER_NAME=distribute-funds ts-node -r ./src/init.ts src/tasks/replay-logs.ts",
        "dry-run-distribute-funds": "NODE_ENV=$(yarn getenv) ts-node -r ./src/init.ts src/tasks/distribute-funds.ts --dry-run",
        "create-mint": "NODE_ENV=$(yarn getenv) ts-node -r ./src/init.ts src/tasks/create-mint.ts",
        "replay-create-mint": "NODE_ENV=$(yarn getenv) LOGGER_NAME=create-mint ts-node -r ./src/init.ts src/tasks/replay-logs.ts",
        "open-pool:raydium": "NODE_ENV=$(yarn getenv) ts-node -r ./src/init.ts src/tasks/raydium/open-pool.ts",
        "replay-open-pool:raydium": "NODE_ENV=$(yarn getenv) LOGGER_NAME=open-pool-raydium ts-node -r ./src/init.ts src/tasks/replay-logs.ts",
        "add-liquidity:raydium": "NODE_ENV=$(yarn getenv) ts-node -r ./src/init.ts src/tasks/raydium/add-liquidity.ts",
        "replay-add-liquidity:raydium": "NODE_ENV=$(yarn getenv) LOGGER_NAME=add-liquidity-raydium ts-node -r ./src/init.ts src/tasks/replay-logs.ts",
        "remove-liquidity:raydium": "NODE_ENV=$(yarn getenv) ts-node -r ./src/init.ts src/tasks/raydium/remove-liquidity.ts",
        "replay-remove-liquidity:raydium": "NODE_ENV=$(yarn getenv) LOGGER_NAME=remove-liquidity -raydium ts-node -r ./src/init.ts src/tasks/replay-logs.ts",
        "burn-liquidity:raydium": "NODE_ENV=$(yarn getenv) ts-node -r ./src/init.ts src/tasks/raydium/burn-liquidity.ts",
        "replay-burn-liquidity:raydium": "NODE_ENV=$(yarn getenv) LOGGER_NAME=burn-liquidity-raydium ts-node -r ./src/init.ts src/tasks/replay-logs.ts",
        "lock-liquidity:raydium": "NODE_ENV=$(yarn getenv) ts-node -r ./src/init.ts src/tasks/raydium/lock-liquidity.ts",
        "replay-lock-liquidity:raydium": "NODE_ENV=$(yarn getenv) LOGGER_NAME=lock-liquidity-raydium ts-node -r ./src/init.ts src/tasks/replay-logs.ts",
        "trade:raydium": "NODE_ENV=$(yarn getenv) ts-node -r ./src/init.ts src/tasks/raydium/trade.ts",
        "replay-trade:raydium": "NODE_ENV=$(yarn getenv) LOGGER_NAME=trade-raydium ts-node -r ./src/init.ts src/tasks/replay-logs.ts",
        "close-pool:raydium": "NODE_ENV=$(yarn getenv) ts-node -r ./src/init.ts src/tasks/raydium/close-pool.ts",
        "replay-close-pool:raydium": "NODE_ENV=$(yarn getenv) LOGGER_NAME=close-pool-raydium ts-node -r ./src/init.ts src/tasks/replay-logs.ts",
        "collect-fees:raydium": "NODE_ENV=$(yarn getenv) ts-node -r ./src/init.ts src/tasks/raydium/collect-fees.ts",
        "replay-collect-fees:raydium": "NODE_ENV=$(yarn getenv) LOGGER_NAME=collect-fees-raydium ts-node -r ./src/init.ts src/tasks/replay-logs.ts",
        "collect-funds": "NODE_ENV=$(yarn getenv) ts-node -r ./src/init.ts src/tasks/collect-funds.ts",
        "replay-collect-funds": "NODE_ENV=$(yarn getenv) LOGGER_NAME=collect-funds ts-node -r ./src/init.ts src/tasks/replay-logs.ts",
        "get-config": "NODE_ENV=$(yarn getenv) ts-node -r ./src/init.ts src/tasks/get-config.ts",
        "get-accounts": "NODE_ENV=$(yarn getenv) ts-node -r ./src/init.ts src/tasks/get-accounts.ts",
        "get-accounts:main": "NODE_ENV=$(yarn getenv) ts-node -r ./src/init.ts src/tasks/get-accounts.ts --mode main",
        "get-accounts:sniper": "NODE_ENV=$(yarn getenv) ts-node -r ./src/init.ts src/tasks/get-accounts.ts --mode sniper",
        "get-accounts:trader": "NODE_ENV=$(yarn getenv) ts-node -r ./src/init.ts src/tasks/get-accounts.ts --mode trader",
        "get-funds": "NODE_ENV=$(yarn getenv) ts-node -r ./src/init.ts src/tasks/get-funds.ts",
        "get-funds:main": "NODE_ENV=$(yarn getenv) ts-node -r ./src/init.ts src/tasks/get-funds.ts --mode main",
        "get-funds:sniper": "NODE_ENV=$(yarn getenv) ts-node -r ./src/init.ts src/tasks/get-funds.ts --mode sniper",
        "get-funds:trader": "NODE_ENV=$(yarn getenv) ts-node -r ./src/init.ts src/tasks/get-funds.ts --mode trader",
        "get-mint": "NODE_ENV=$(yarn getenv) ts-node -r ./src/init.ts src/tasks/get-mint.ts",
        "get-pool:raydium": "NODE_ENV=$(yarn getenv) ts-node -r ./src/init.ts src/tasks/raydium/get-pool.ts",
        "generate-encryption-secret": "hexdump -vn16 -e'4/4 \"%08x\" 1 \"\n\"' /dev/urandom",
        "generate-shares": "NODE_ENV=$(yarn getenv) ts-node -r ./src/init.ts src/tasks/generate-shares.ts --count 42 --sum 50 --deviation 31",
        "grind-keypairs": "yarn grind-keypair:dev && yarn grind-keypair:dsn && yarn grind-keypair:dtr",
        "grind-keypair:dev": "NODE_ENV=$(yarn getenv) ts-node -r ./src/init.ts src/tasks/grind-keypair.ts --prefix De --postfix V",
        "grind-keypair:dsn": "NODE_ENV=$(yarn getenv) ts-node -r ./src/init.ts src/tasks/grind-keypair.ts --prefix Ds --postfix N",
        "grind-keypair:dtr": "NODE_ENV=$(yarn getenv) ts-node -r ./src/init.ts src/tasks/grind-keypair.ts --prefix Dt --postfix R",
        "rename-token-files": "NODE_ENV=$(yarn getenv) ts-node -r ./src/init.ts src/tasks/rename-token-files.ts"
    },
    "keywords": [],
    "author": "EverCoinX <2901744+evercoinx@users.noreply.github.com>",
    "license": "UNLICENSED",
    "private": true,
    "type": "commonjs",
    "engines": {
        "node": ">=22"
    },
    "packageManager": "yarn@4.7.0",
    "dependencies": {
        "@raydium-io/raydium-sdk-v2": "^0.1.118-alpha",
        "@solana/spl-token": "^0.4.13",
        "@solana/web3.js": "^1.98.0",
        "arweave": "^1.15.5",
        "bs58": "^6.0.0",
        "chalk": "^5.4.1",
        "decimal.js": "^10.5.0",
        "dotenv": "^16.4.7",
        "fastestsmallesttextencoderdecoder": "^1.0.22",
        "flat-cache": "^6.1.7",
        "got": "^11.8.6",
        "helius-sdk": "^1.4.2",
        "image-size": "^2.0.1",
        "pinata-web3": "^0.5.4",
        "pino": "^9.6.0",
        "pino-pretty": "^13.0.0"
    },
    "devDependencies": {
        "@eslint/js": "^9.23.0",
        "@tsconfig/node20": "^20.1.4",
        "@types/big.js": "^6.2.2",
        "@types/bn.js": "^5.1.6",
        "@types/decimal.js": "^7.4.3",
        "@types/minimist": "^1.2.5",
        "@types/node": "^22.13.11",
        "eslint": "^9.23.0",
        "eslint-config-prettier": "^10.1.1",
        "eslint-plugin-prettier": "^5.2.3",
        "husky": "^9.1.7",
        "joi": "^17.13.3",
        "prettier": "^3.5.3",
        "source-map-support": "^0.5.21",
        "ts-node": "^10.9.2",
        "typescript": "^5.8.2",
        "typescript-eslint": "^8.27.0"
    }
}
